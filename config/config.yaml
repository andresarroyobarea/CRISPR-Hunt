# path or URL to sample sheet in tsv format 
# Varibles: sample, condition, replicate, included, batch and notes.
samples: config/samples.tsv

# path or URL to sequencing unit sheet in tsv format.
# Variables: sample, library_type, lane, fastq1 fastq2, md5_fastq1 and md5fastq2
units: config/units.tsv

# path or URL to design matrix in tsv format.
# Variables: sample, condition and additional varibles depending on experimental design.
design: config/design_matrix.tsv

# path to the results directory
outdir: "results"

# path to the log directory
logdir: "logs"

# Project name
project: "test"

# Paths to resources files
library_file: resources/sgRNA_library.txt
cnv_value_file: resources/CNV_value.tsv

# Here we could include essential genes and non-essential (BAGEL / Deepmap)
essential_genes: resources/essential_genes.tsv
non_essential_genes: resources/non_essential_genes.tsv

# Sample filtering
sample_filters:
  included: True
  batch: null
  condition: null

# Snakemake wrappers:
wrapper:
  qc: "v7.1.0/bio/fastqc"
  trimming: "v7.1.0/bio/cutadapt/se"

# Conda environments
conda_envs: 
  mageck: env/mageck.yaml # There is not snakemake wrapper for MAGECK
  crisprcleanR: env/crisprcleanR.yaml # Create a conda env with R-base and CRISPRcleanR.
  bagel2: env/bagel2.yaml # To check if there is a snakemake wrapper (long-term task)
  hitselection: env/hitselection.yaml # To check if there is a snakemake wrapper (long-term task)
  drugz: env/drugz.yaml # To check if there is a snakemake wrapper (long-term task)
  vispr: env/vispr.yaml # To decide if VISPR should be included (long-term task)

# Optional steps
# CNV correction
cnv_correction: 
  enabled: True
  
  # CNV Method. Options: CRISPRcleanR  MAGECK.
  cnv_method: ""

# To choose the testing method/s to run.
essentiality_methods:
  - mageck_rra
  - mageck_mle

# Parameters
parameters:

  # Activate when UMIs are used in the sequencing procedure
  umi_processing:

    # True: UMIs processing activated
    # False: UMIS processing deactivated
    enabled: False

    # In case UMIs processing is activated, one or two UMI pattern
    # should be provided by their literal sequecing or regular 
    # expressions
    umi_pattern1: ""
    umi_pattern2: ""

  # Trimming
  trimming:
    
    # True: Cutadapt to remove primers (Recomended when primers are in different sequence positions)
    # False: MAGECK count to remove primers (Recommended when primers are always in the same position) 
    enabled: True

    adapters: ""

    # To add additional parameters (cutadapt extra parameters)
    extra: ""

  #fastq_screen: To assess if contamination should be evaluated?

  alignment:
    # Count method. Options: MAGECK count, Bowtie2, STAR. (How to incorporate the last ones should be evaluated)
    align_method: "mageck"
    
    # Normalization method (Only for MAGECK count)
    norm_method: "none"

    # Extra arguments for the aligner.
    extra: ""

  #cnv_correction: Think about how to integrate CRISPRcleanR parameters here.
  
  mageck_rra_test:
    # Extra arguments for MAGECK test.
    extra: ""

  mageck_mle_test:
    # Extra arguments for MAGECK MLE.
    extra: ""
  
  # TODO: Evaluate if it should be incorporated.
  #mageck_pathway:
    # Extra arguments for MAGECK Pathway.
  #  extra: ""
  
  # TODO: Evaluate if it should be incorporated.
  #mageck_plot:
    # Extra arguments for MAGECK Plot. 
  #  extra: ""

  # TODO: Planned.
  #bagel2:
    # Extra arguments for BAGEL2. 
  #  extra: ""
  
  # TODO: Planned.
  #hitselection:
    # Extra arguments for HitSelection. 
  #  extra: ""
  
  # TODO: Planned.
  #drugz:
    # Extra arguments for Drugz. 
  #  extra: ""

  summary_report:
    # Extra arguments for CRISPR screening quality plots generation.
    extra: ""

# Resources: Think about if resources should be specified here. Maybe just in case a cluster was 
# used in this pipeline.

resources:
    default:
        threads: 1
        mem_mb:  4096
        runtime: 10
   
    qc_raw:
        threads: 8
        mem_mb:  4096
        runtime: 10

    trimming:
        threads: 8
        mem_mb: 4096
        runtime: 10

    qc_trimming:
        threads: 8
        mem_mb:  4096
        runtime: 10
    
    alignment: # To check if this MAGECK count allows multi-thread.
        threads: 8
        mem_mb:  4096
        runtime: 10

    cnv_correction:
        threads: 8
        mem_mb:  4096
        runtime: 10

    mageck_rra_test: # To check if this function allows multi-thread.
        threads: 8
        mem_mb:  4096
        runtime: 10

    mageck_mle_test: # To check if this function allows multi-thread.
        threads: 8
        mem_mb:  4096
        runtime: 10

    # TODO: Planned
    #bagel2_test: # To check if this function allows multi-thread.
    #  threads: 8
    #  mem_mb:  4096
    #  runtime: 10

    summary_report: # To check if this function allows multi-thread.
        threads: 2
        mem_mb:  4096
        runtime: 10